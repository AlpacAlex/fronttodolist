{"version":3,"sources":["myStyle.js","MenuToDo.js","ToDo.js","ToDoForm.js","styleTheme.js","App.js","reportWebVitals.js","index.js"],"names":["styles","App","Paper","padding","margin","textAlign","width","backgroundColor","Header","fontSize","color","MenuToDo","Icon","marginLeft","display","alignItems","marginTop","MenuTodo","ToDo","float","Date","done","Box","style","Button","className","onClick","it","marginRight","component","IconButton","id","VerticalAlignBottom","VerticalAlignTop","todo","useState","name","changeValue","setChangeValue","validInputText","handleChangeValue","e","newTextInput","currentTarget","value","keyCode","test","complete","uuid","upTask","document","activeElement","blur","Grid","item","xs","elevation","Checkbox","checked","onChange","userInput","Input","disableUnderline","onKeyDown","m","createdAt","toLocaleDateString","Delete","ToDoForm","setUserInput","FormControl","onSubmit","preventDefault","noValidate","autoComplete","TextField","type","label","variant","useStyles","makeStyles","theme","root","spacing","paginator","justifyContent","axios","require","Alert","props","currentTodo","setCurrentTodo","currentPage","setCurrentPage","er","msg","error","setError","totalRecords","length","classes","URL","executeRequest","a","method","userId","task","GET_REQUEST","urlAdres","get","response","status","data","post","patch","delete","console","log","curdone","allTask","onPageChanged","showAll","showComplate","filter","showUnComplate","sortByDate","sortTodo","sort","b","parse","sortByReversDate","sortTodoRevers","newTask","useCallback","event","page","maxPage","handleCloseToast","reason","currentData","useMemo","slice","pages","Math","ceil","useEffect","serverData","container","map","Pagination","count","defaultPage","ul","Snackbar","open","autoHideDuration","onClose","severity","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c87aec17.chunk.js","sourcesContent":["\nconst styles = {\n    App: {\n        Paper: {\n            padding: 20,\n            margin: \"auto\",\n            textAlign: \"center\",\n            width: 500,\n            backgroundColor: \"transparent\"\n        },\n        Header: {\n            padding: 10,\n            margin: \"auto\",\n            textAlign: \"center\",\n            fontSize: 40,\n            backgroundColor: \"transparent\",\n            color: \"black\"\n        },\n    },\n    MenuToDo: {\n        Icon: {\n            marginLeft: \"auto\"\n        },\n        Paper: {\n            margin: \"auto\",\n            padding: 10,\n            display: \"flex\",\n            alignItems: \"center\",\n            marginTop: 10,\n            width: 500\n        },\n        MenuTodo: {\n            padding: 10,\n            margin: \"0 auto\",\n            textAlign: \"center\",\n            width: 500,\n            backgroundColor: \"transparent\"\n        },\n    },\n    ToDo: {\n        Icon: {\n            float: \"right\"\n        },\n        Paper: {\n            margin: \"auto\",\n            padding: 10,\n            display: \"flex\",\n            alignItems: \"center\",\n            marginTop: 10,\n            width: 500\n        },\n        Date: {\n            fontSize: 20,\n            marginLeft: \"auto\"\n        } \n    }\n};\n\nexport default styles;\n","import React from 'react';\nimport { Box, Button, IconButton } from '@material-ui/core';\nimport {VerticalAlignBottom, VerticalAlignTop} from '@material-ui/icons';\nimport styles from \"./myStyle\";\n\n\n\nfunction MenuToDo({ done }) {\n    return (\n        <Box style={styles.MenuToDo.MenuTodo}>\n            <Button className=\"all\" onClick={() => done({ it: \"showAllTask\" })}>All</Button>\n            <Button className=\"done\" onClick={() => done({ it: \"showComplateTask\" })}>Done</Button>\n            <Button className=\"undone\" onClick={() => done({ it: \"showUncomplateTask\" })} style={{ marginRight: 90  }}>Undone</Button>\n            <Box component=\"span\" className=\"sort\">Sort by Date</Box>\n            <IconButton\n                id=\"up\"\n                color=\"primary\"\n                aria-label=\"up bottom\"\n                style={styles.MenuToDo.Icon}\n                onClick={() => {done({it: \"sortByDate\" })}}\n            >\n                <VerticalAlignBottom fontSize=\"small\" />\n            </IconButton>\n            <IconButton\n                id=\"up\"\n                color=\"primary\"\n                aria-label=\"down bottom\"\n                style={styles.MenuToDo.Icon}\n                onClick={() => {done({ it: \"sortByReversDate\" })}}\n            >\n                <VerticalAlignTop fontSize=\"small\" />\n            </IconButton>\n        </Box>\n    )\n}\n\nexport default MenuToDo;","import React, { useState } from \"react\";\r\nimport { Paper, Grid, Box, Checkbox, Input } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { Delete } from \"@material-ui/icons\";\r\nimport styles from \"./myStyle\";\r\n\r\n\r\n\r\nfunction ToDo({ todo, done }) {\r\n    const [changeValue, setChangeValue] = useState(todo.name);\r\n    const validInputText = /^[\\w\\s]{1,18}$/gm;\r\n\r\n    const handleChangeValue = (e) => {\r\n        const newTextInput = e.currentTarget.value;\r\n        setChangeValue(newTextInput);\r\n        if (e.keyCode === 13)\r\n        {\r\n            const isValid = validInputText.test(newTextInput);\r\n            if (isValid) {\r\n                done({ it: \"updateTask\", complete: todo.done, uuid: todo.uuid, upTask: newTextInput });\r\n            } else {\r\n                setChangeValue(todo.name);\r\n            }\r\n            document.activeElement.blur();\r\n        } else if (e.keyCode === 27) {\r\n            setChangeValue(todo.name);\r\n            document.activeElement.blur();\r\n        }\r\n    };\r\n\r\n    //{it, userInput = \"\", complete = -1, uuid = 0, upTask = \"\" }\r\n    return (\r\n        <Grid item xs={12}>\r\n            <Paper elevation={2} style={styles.ToDo.Paper}>\r\n                <Checkbox \r\n                    checked={todo.done ? true : false}\r\n                    onChange={()=>{}} \r\n                    onClick={() => done({ it: \"changeChecbox\", userInput: todo.name, complete: todo.done, uuid: todo.uuid })}\r\n                    color=\"secondary\"\r\n                />\r\n                <Input \r\n                    value={changeValue} \r\n                    disableUnderline={true}\r\n                    onChange={handleChangeValue} \r\n                    onKeyDown={handleChangeValue}\r\n                    style={{ width: \"64%\" }}\r\n                />\r\n                <Box component=\"span\" style={styles.ToDo.Date} textAlign=\"right\" m={1}>{new Date(todo.createdAt).toLocaleDateString()}</Box>\r\n                <IconButton\r\n                    style={styles.ToDo.Icon}               \r\n                    color=\"secondary\"\r\n                    aria-label=\"Delete\"\r\n                    onClick={() => done({ it: \"removeTask\", uuid: todo.uuid })}\r\n                >\r\n                    <Delete fontSize=\"small\" />\r\n                </IconButton>\r\n            </Paper>\r\n        </Grid> \r\n    );\r\n    \r\n}\r\n\r\n\r\nexport default ToDo;","import { useState } from 'react'\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\n\r\n\r\nfunction ToDoForm({ done }) {\r\n    const [userInput, setUserInput] = useState('');\r\n    const validInputText = /^[\\w\\s]{0,25}$/gm;\r\n\r\n    const handleChange = (e) => {\r\n        e.preventDefault()\r\n        const newTextInput = e.currentTarget.value;\r\n        const isValid = validInputText.test(newTextInput);\r\n        if (isValid) {\r\n            setUserInput(e.currentTarget.value)\r\n        }     \r\n    };\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        done({ it: \"addTask\", userInput: userInput })\r\n        setUserInput(\"\")\r\n    };\r\n\r\n    \r\n    return (\r\n        <FormControl component=\"form\" onSubmit={handleSubmit} style={{ display: \"flex\" }} noValidate autoComplete=\"off\">\r\n            <Box style={{ display: \"flex\" }}>\r\n                <TextField \r\n                type=\"text\"\r\n                onChange={handleChange}\r\n                value={userInput}\r\n                id=\"outlined-basic\" \r\n                label=\"Введите значение...\" \r\n                variant=\"outlined\" \r\n                style={{ width: \"80%\" }}/>\r\n                <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    style={{ width: \"20%\" }}\r\n                    >\r\n                    Создать\r\n                </Button>\r\n            </Box>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default ToDoForm;","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({//app\n    root: {\n      '& > *': {\n        marginTop: theme.spacing(2),\n        display: \"flex\",\n        margin: \"auto\",\n        fontSize: 20\n      },\n    },\n    paginator: {\n      margin: \"auto\",\n      justifyContent: \"center\",\n      padding: \"10px\"\n    }\n  }));\n  \n  export default useStyles;","import React, { useEffect } from \"react\";\nimport { useState, useMemo, useCallback } from 'react';\nimport MenuToDo from \"./MenuToDo\";\nimport ToDo from './ToDo';\nimport ToDoForm from './ToDoForm';\nimport { Paper, Grid, Box, Snackbar } from \"@material-ui/core\";\nimport { Pagination } from '@material-ui/lab';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport styles from \"./myStyle\";\nimport useStyles from \"./styleTheme\";\nconst axios = require('axios');\n\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nfunction App() {\n  //const [todos, setTodos] = useState([]);\n  const [currentTodo, setCurrentTodo] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const [error, setError] = useState({\n    er: false,\n    msg: null\n  });\n  //const [flag, setFlag] = useState(0); \n  \n  let totalRecords = currentTodo.length;\n  const LIMIT = 5;\n  const classes = useStyles();\n  const URL = \"https://todo-api-learning.herokuapp.com\";\n\n  const executeRequest  = async ({method, userId = \"1\", uuid = \"\"}, {task = \"\", done = false }) => {\n    switch(method) {\n      case \"get\":\n        const GET_REQUEST = `/v1/tasks/${userId}`;\n        const urlAdres = URL + GET_REQUEST;\n        try {\n          const response = await axios.get(urlAdres)\n          //console.log(response)\n          if (response.status === 200) {\n            return response.data\n            // const a = [...response.data]\n            // setTodos([...response.data])\n          } else {\n            //snack bar\n            // setError({\n            //   er: true,\n            //   msg: \"error get request\"\n            // })\n          }\n        } catch (error) {\n          //console.error(error)\n          setError({\n            er: true,\n            msg: \"error in receiving data\"\n          })\n        }\n        break;\n      case \"post\":\n        if (task) {\n          const GET_REQUEST = `/v1/task/${userId}`;\n          const urlAdres = URL + GET_REQUEST;\n          try {\n            const response = await axios.post(urlAdres, {\n              name: task,\n              done: done\n            });\n            //console.log(response);\n            if (response.status === 200) {\n              return response.data; \n            } else {\n              //snack bar flag error\n            }\n          } catch (error) {\n            //console.error(error);\n            setError({\n              er: true,\n              msg: \"error in sending data\"\n            })\n          }\n        }\n        break;\n      case \"patch\":\n        if (uuid) {\n          const GET_REQUEST = `/v1/task/${userId}/${uuid}`;\n          const urlAdres = URL + GET_REQUEST;\n          try {\n            const response = await axios.patch(urlAdres, {//проверку на статус и возвращение? данных(data)\n              name: task,\n              done: done\n            });\n            //console.log(response);\n            if (response.status === 200) {\n              return response.data; \n            } else {\n              //snack bar flag error\n            }\n          } catch (error) {\n            //console.log(error);\n            setError({\n              er: true,\n              msg: \"error in updating data\"\n            })\n          }\n        }\n        break;\n      case \"delete\":\n        if (uuid) {\n          const GET_REQUEST = `/v1/task/${userId}/${uuid}`;\n          const urlAdres = URL + GET_REQUEST;\n          try {\n            const response = await axios.delete(urlAdres, {//проверку на статус и возвращение? данных(data)\n              uuid: uuid,\n              name: task,\n              done: done\n            });\n            //console.log(response);\n            if (response.status === 204) {\n              return response; \n            } else {\n              //snack bar flag error\n            }\n          } catch (error) {\n            //console.log(error);\n            setError({\n              er: true,\n              msg: \"error in deleting data\"\n            })\n          }\n        }\n        break;\n      default:\n        console.log(\"method? error | default\")\n    }\n    return true;\n  }\n\n  const done = async ({it, userInput = \"\", complete = -1, uuid = 0, upTask = \"\" }) => {// передача аргументов по структуре newItem\n\n    //let done = [...todos];\n    let curdone = [...currentTodo];\n\n    switch(it) {\n      case \"addTask\":\n        if(userInput) {\n          await executeRequest({ method: \"post\"}, { task: userInput });\n          const allTask = await executeRequest({method: \"get\"}, {});\n          curdone = [...allTask]; \n        }\n        break;\n      case \"removeTask\":\n        if(uuid) {\n          await executeRequest({ method: \"delete\", uuid: uuid }, { });\n          const allTask = await executeRequest({method: \"get\"}, {});\n          curdone = [...allTask];\n          if (!((totalRecords - 1) % LIMIT)) {\n            onPageChanged(1, currentPage - 1);\n          }\n        }\n        break;\n      case \"changeChecbox\":\n        if (userInput && uuid && complete !== -1) {\n          await executeRequest({method: \"patch\", uuid: uuid }, { task: userInput, done: !complete });\n          const allTask = await executeRequest({method: \"get\"}, {});\n          curdone = [...allTask];\n        }\n        break;\n      case \"showAllTask\":\n        const showAll = await executeRequest({method: \"get\"}, {});\n        curdone = [...showAll];\n        break;\n      case \"showComplateTask\":\n        const showComplate = await executeRequest({method: \"get\"}, {});\n        curdone = [...showComplate.filter( (todo) => todo.done === true)];;\n        onPageChanged(1, 1);\n        break;\n      case \"showUncomplateTask\":\n        const showUnComplate = await executeRequest({method: \"get\"}, {});\n        curdone = [...showUnComplate.filter( (todo) => todo.done === false)];\n        onPageChanged(1, 1);\n        break;\n      case \"sortByDate\":\n        const sortByDate = await executeRequest({method: \"get\"}, {});\n        const sortTodo = [...sortByDate];\n        sortTodo.sort( (a,b) => Date.parse(a.createdAt) - Date.parse(b.createdAt) );\n        curdone = [...sortTodo];\n        break;\n      case \"sortByReversDate\":\n        const sortByReversDate = await executeRequest({method: \"get\"}, {});\n        const sortTodoRevers = [...sortByReversDate];\n        sortTodoRevers.sort( (a,b) => Date.parse(b.createdAt) - Date.parse(a.createdAt) );\n        curdone = [...sortTodoRevers];\n        break;\n      case \"updateTask\":\n        if (uuid && upTask && complete !== -1) {\n          await executeRequest({method: \"patch\", uuid: uuid }, { task: upTask, done: complete });\n          const newTask = await executeRequest({method: \"get\"}, {});\n          curdone = [...newTask];\n        }\n        break;\n      default:\n        console.log(\"error done task\");\n    }\n    setCurrentTodo(curdone);\n  };\n  \n  const onPageChanged = useCallback(\n    (event, page, maxPage=-1) => {\n      if (page < 1) page++;\n      if (maxPage !== -1 && page > maxPage) page--;\n      setCurrentPage(page);\n    },\n    [setCurrentPage]\n  );\n\n  const handleCloseToast = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setError(false);\n  };\n\n\n  const currentData = useMemo( () => {\n    const currentData = [...currentTodo]\n    .slice(\n      (currentPage - 1) * LIMIT,\n      (currentPage - 1) * LIMIT + LIMIT\n    );\n    //currentData.sort( (a,b) => Date.parse(a.createdAt) - Date.parse(b.createdAt) );\n\n    return currentData;\n  }, [currentTodo, currentPage]);\n\n  const pages = Math.ceil(totalRecords / LIMIT) || 0;\n \n  useEffect( async () => {\n    // async function deleteAll() {\n    //   const allTask = await executeRequest({method: \"get\"}, {});\n    //   for (let i = 0; i < allTask.length; i++) {\n    //     await executeRequest({method: \"delete\", uuid: allTask[i].uuid }, { });\n    //   }\n    // }\n    //deleteAll();\n    const serverData = await executeRequest({method: \"get\"}, {});\n    setCurrentTodo(serverData);\n    //await executeRequest({ method: \"post\"}, { task: \"test 1\" });\n    //await executeRequest({method: \"patch\", uuid: \"0b1f790c-899d-44de-98c3-19c352acb8a8\"}, { task: \"update test 1\", done: true });\n    //await executeRequest({method: \"get\"}, {});\n    //await executeRequest({method: \"delete\", uuid: \"0b1f790c-899d-44de-98c3-19c352acb8a8\"}, { task: \"update test 1\", done: true });//204(нет контента) все равно, но удаляет\n    //await executeRequest({method: \"delete\", uuid: \"0b1f790c-899d-44de-98c3-19c352acb8a8\"}, { });// удалил без параметров тела\n    //await executeRequest({method: \"get\"}, {});\n  }, []);\n\n  return (\n    <Box className=\"App\"> \n      <Grid container spacing={0}>\n        <Paper style={styles.App.Header} elevation={0}>ToDo: {currentTodo.length}</Paper>\n        <Grid item xs={12}>\n          <Paper style={styles.App.Paper}>\n            <ToDoForm done={done}/>\n          </Paper>\n          <MenuToDo\n            done = {done}\n          />\n          {currentData.map((todo) =>        \n            <ToDo\n              key={Date.parse(todo.createdAt)}\n              todo={todo}           \n              done={done}\n              />   \n            )}\n          <Box className={classes.root}>        \n            {pages > 1 && <Pagination \n              count={pages}\n              onChange={onPageChanged}\n              defaultPage={1}\n              color=\"primary\"\n              classes={{ ul: classes.paginator }} \n            />}     \n          </Box>\n        </Grid>\n          <Snackbar open={error.er} autoHideDuration={3000} onClose={handleCloseToast}>\n            <Alert onClose={handleCloseToast} severity=\"error\">\n              {error.msg}\n            </Alert>\n        </Snackbar>\n      </Grid>\n    </Box>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}