{"version":3,"sources":["myStyle.js","MenuToDo.js","ToDo.js","ToDoForm.js","styleTheme.js","App.js","reportWebVitals.js","index.js"],"names":["styles","App","Paper","padding","margin","textAlign","width","backgroundColor","Header","fontSize","color","MenuToDo","Icon","marginLeft","display","alignItems","marginTop","MenuTodo","ToDo","float","Date","done","Box","style","Button","className","onClick","it","marginRight","component","IconButton","id","VerticalAlignBottom","VerticalAlignTop","todo","useState","name","changeValue","setChangeValue","validInputText","handleChangeValue","e","newTextInput","currentTarget","value","keyCode","test","complete","uuid","upTask","document","activeElement","blur","Grid","item","xs","elevation","Checkbox","checked","onChange","userInput","Input","disableUnderline","onKeyDown","m","createdAt","toLocaleDateString","Delete","ToDoForm","setUserInput","FormControl","onSubmit","preventDefault","replace","length","noValidate","autoComplete","TextField","type","label","variant","useStyles","makeStyles","theme","root","spacing","paginator","justifyContent","axios","require","Alert","props","currentTodo","setCurrentTodo","currentPage","setCurrentPage","er","msg","error","setError","totalRecords","classes","URL","executeRequest","a","method","userId","task","filter","order","GET_REQUEST","urlAdres","get","response","status","data","message","post","console","log","patch","delete","curdone","allTask","onPageChanged","showAll","showComplate","showUnComplate","sortByDate","sortByReversDate","newTask","useCallback","event","page","maxPage","handleCloseToast","reason","currentData","useMemo","slice","pages","Math","ceil","useEffect","serverData","container","map","parse","Pagination","count","defaultPage","ul","Snackbar","open","autoHideDuration","onClose","severity","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e2c6f4d0.chunk.js","sourcesContent":["\nconst styles = {\n    App: {\n        Paper: {\n            padding: 20,\n            margin: \"auto\",\n            textAlign: \"center\",\n            width: 500,\n            backgroundColor: \"transparent\"\n        },\n        Header: {\n            padding: 10,\n            margin: \"auto\",\n            textAlign: \"center\",\n            fontSize: 40,\n            width: 500,\n            backgroundColor: \"transparent\",\n            color: \"black\"\n        },\n    },\n    MenuToDo: {\n        Icon: {\n            marginLeft: \"auto\"\n        },\n        Paper: {\n            margin: \"auto\",\n            padding: 10,\n            display: \"flex\",\n            alignItems: \"center\",\n            marginTop: 10,\n            width: 500\n        },\n        MenuTodo: {\n            padding: 10,\n            margin: \"0 auto\",\n            textAlign: \"center\",\n            width: 500,\n            backgroundColor: \"transparent\"\n        },\n    },\n    ToDo: {\n        Icon: {\n            float: \"right\"\n        },\n        Paper: {\n            margin: \"auto\",\n            padding: 10,\n            display: \"flex\",\n            alignItems: \"center\",\n            marginTop: 10,\n            width: 500\n        },\n        Date: {\n            fontSize: 20,\n            marginLeft: \"auto\"\n        } \n    }\n};\n\nexport default styles;\n","import React from 'react';\nimport { Box, Button, IconButton } from '@material-ui/core';\nimport {VerticalAlignBottom, VerticalAlignTop} from '@material-ui/icons';\nimport styles from \"./myStyle\";\n\n\n\nfunction MenuToDo({ done }) {\n    return (\n        <Box style={styles.MenuToDo.MenuTodo}>\n            <Button className=\"all\" onClick={() => done({ it: \"showAllTask\" })}>All</Button>\n            <Button className=\"done\" onClick={() => done({ it: \"showComplateTask\" })}>Done</Button>\n            <Button className=\"undone\" onClick={() => done({ it: \"showUncomplateTask\" })} style={{ marginRight: 90  }}>Undone</Button>\n            <Box component=\"span\" className=\"sort\">Sort by Date</Box>\n            <IconButton\n                id=\"up\"\n                color=\"primary\"\n                aria-label=\"up bottom\"\n                style={styles.MenuToDo.Icon}\n                onClick={() => {done({it: \"sortByDate\" })}}\n            >\n                <VerticalAlignBottom fontSize=\"small\" />\n            </IconButton>\n            <IconButton\n                id=\"up\"\n                color=\"primary\"\n                aria-label=\"down bottom\"\n                style={styles.MenuToDo.Icon}\n                onClick={() => {done({ it: \"sortByReversDate\" })}}\n            >\n                <VerticalAlignTop fontSize=\"small\" />\n            </IconButton>\n        </Box>\n    )\n}\n\nexport default MenuToDo;","import React, { useState } from \"react\";\r\nimport { Paper, Grid, Box, Checkbox, Input } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { Delete } from \"@material-ui/icons\";\r\nimport styles from \"./myStyle\";\r\n\r\n\r\n\r\nfunction ToDo({ todo, done }) {\r\n    const [changeValue, setChangeValue] = useState(todo.name);\r\n    const validInputText = /^[\\w\\s]{1,18}$/gm;\r\n\r\n    const handleChangeValue = (e) => {\r\n        const newTextInput = e.currentTarget.value;\r\n        setChangeValue(newTextInput);\r\n        if (e.keyCode === 13)\r\n        {\r\n            const isValid = validInputText.test(newTextInput);\r\n            if (isValid) {\r\n                done({ it: \"updateTask\", complete: todo.done, uuid: todo.uuid, upTask: newTextInput });\r\n            } else {\r\n                setChangeValue(todo.name);\r\n            }\r\n            document.activeElement.blur();\r\n        } else if (e.keyCode === 27) {\r\n            setChangeValue(todo.name);\r\n            document.activeElement.blur();\r\n        }       \r\n    };\r\n\r\n    //{it, userInput = \"\", complete = -1, uuid = 0, upTask = \"\" }\r\n    return (\r\n        <Grid item xs={12}>\r\n            <Paper elevation={2} style={styles.ToDo.Paper}>\r\n                <Checkbox \r\n                    checked={todo.done ? true : false}\r\n                    onChange={()=>{}} \r\n                    onClick={() => done({ it: \"changeChecbox\", userInput: todo.name, complete: todo.done, uuid: todo.uuid })}\r\n                    color=\"secondary\"\r\n                />\r\n                <Input \r\n                    value={changeValue} \r\n                    disableUnderline={true}\r\n                    onChange={handleChangeValue} \r\n                    onKeyDown={handleChangeValue}\r\n                    style={{ width: \"64%\" }}\r\n                />\r\n                <Box component=\"span\" style={styles.ToDo.Date} textAlign=\"right\" m={1}>{new Date(todo.createdAt).toLocaleDateString()}</Box>\r\n                <IconButton\r\n                    style={styles.ToDo.Icon}               \r\n                    color=\"secondary\"\r\n                    aria-label=\"Delete\"\r\n                    onClick={() => done({ it: \"removeTask\", uuid: todo.uuid })}\r\n                >\r\n                    <Delete fontSize=\"small\" />\r\n                </IconButton>\r\n            </Paper>\r\n        </Grid> \r\n    );\r\n    \r\n}\r\n\r\n\r\nexport default ToDo;","import { useState } from 'react'\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\n\r\n\r\nfunction ToDoForm({ done }) {\r\n    const [userInput, setUserInput] = useState('');\r\n    const validInputText = /^[\\w\\s]{0,25}$/gm;\r\n\r\n    const handleChange = (e) => {\r\n        e.preventDefault()\r\n        const newTextInput = e.currentTarget.value;\r\n        \r\n        const isValid = validInputText.test(newTextInput);\r\n        if (isValid) {\r\n            setUserInput(e.currentTarget.value);\r\n        }     \r\n    };\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        const isValidSpace = userInput.replace(/\\s+/g, '').length;\r\n        if (isValidSpace) {\r\n            done({ it: \"addTask\", userInput: userInput });\r\n            setUserInput(\"\");\r\n        }\r\n        setUserInput(\"\");\r\n    };\r\n\r\n    \r\n    return (\r\n        <FormControl component=\"form\" onSubmit={handleSubmit} style={{ display: \"flex\" }} noValidate autoComplete=\"off\">\r\n            <Box style={{ display: \"flex\" }}>\r\n                <TextField \r\n                type=\"text\"\r\n                onChange={handleChange}\r\n                value={userInput}\r\n                id=\"outlined-basic\" \r\n                label=\"Введите значение...\" \r\n                variant=\"outlined\" \r\n                style={{ width: \"80%\" }}/>\r\n                <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    style={{ width: \"20%\" }}\r\n                    >\r\n                    Создать\r\n                </Button>\r\n            </Box>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default ToDoForm;","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({//app\n    root: {\n      '& > *': {\n        marginTop: theme.spacing(2),\n        display: \"flex\",\n        margin: \"auto\",\n        fontSize: 20\n      },\n    },\n    paginator: {\n      margin: \"auto\",\n      justifyContent: \"center\",\n      padding: \"10px\"\n    }\n  }));\n  \n  export default useStyles;","import React, { useEffect } from \"react\";\nimport { useState, useMemo, useCallback } from 'react';\nimport MenuToDo from \"./MenuToDo\";\nimport ToDo from './ToDo';\nimport ToDoForm from './ToDoForm';\nimport { Paper, Grid, Box, Snackbar } from \"@material-ui/core\";\nimport { Pagination } from '@material-ui/lab';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport styles from \"./myStyle\";\nimport useStyles from \"./styleTheme\";\nconst axios = require('axios');\n\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nfunction App() {\n  //const [todos, setTodos] = useState([]);\n  const [currentTodo, setCurrentTodo] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const [error, setError] = useState({\n    er: false,\n    msg: null\n  });\n  //const [flag, setFlag] = useState(0); \n  \n  let totalRecords = currentTodo.length;\n  const LIMIT = 5;\n  const classes = useStyles();\n  const URL = \"https://todo-api-learning.herokuapp.com\";\n\n  const executeRequest  = async ({method, userId = \"1\", uuid = \"\"}, {task = \"\", done = false }, { filter=\"\", order=\"\" }) => {\n    switch(method) {\n      case \"get\":\n        if (filter && order) {\n          const GET_REQUEST = `/v1/tasks/${userId}?filterBy=${filter}&order=${order}`;\n          const urlAdres = URL + GET_REQUEST;\n          try {\n            const response = await axios.get(urlAdres)\n            if (response.status === 200) {\n              return response.data;\n            } \n          } catch (error) {\n            setError({\n              er: true,\n              msg: error.response.data.message\n            });\n          }\n        } else if (filter) {\n          const GET_REQUEST = `/v1/tasks/${userId}?filterBy=${filter}`;\n          const urlAdres = URL + GET_REQUEST;\n          try {\n            const response = await axios.get(urlAdres)\n            if (response.status === 200) {\n              return response.data;\n            } \n          } catch (error) {\n            setError({\n              er: true,\n              msg: error.response.data.message\n            });\n          }\n        } else if (order) {\n          const GET_REQUEST = `/v1/tasks/${userId}?order=${order}`;\n          const urlAdres = URL + GET_REQUEST;\n          try {\n            const response = await axios.get(urlAdres)\n            if (response.status === 200) {\n              return response.data;\n            } \n          } catch (error) {\n            setError({\n              er: true,\n              msg: error.response.data.message\n            });\n          }\n        } else {\n          const GET_REQUEST = `/v1/tasks/${userId}`;\n          const urlAdres = URL + GET_REQUEST;\n          try {\n            const response = await axios.get(urlAdres)\n            if (response.status === 200) {\n              return response.data;\n            } \n          } catch (error) {\n            setError({\n              er: true,\n              msg: error.response.data.message\n            });\n          }\n        }\n        break;\n      case \"post\":\n        if (task) {\n          const GET_REQUEST = `/v1/task/${userId}`;\n          const urlAdres = URL + GET_REQUEST;\n          try {\n            const response = await axios.post(urlAdres, {\n              name: task,\n              done: done\n            });\n            console.log(response);\n            if (response.status === 200) {\n              return response.data; \n            }\n          } catch (error) {\n            setError({\n              er: true,\n              msg: error.response.data.message\n            });\n          }\n        }\n        break;\n      case \"patch\":\n        if (uuid) {\n          const GET_REQUEST = `/v1/task/${userId}/${uuid}`;\n          const urlAdres = URL + GET_REQUEST;\n          try {\n            const response = await axios.patch(urlAdres, {//проверку на статус и возвращение? данных(data)\n              name: task,\n              done: done\n            });\n            //console.log(response);\n            if (response.status === 200) {\n              return response.data; \n            }\n          } catch (error) {\n            setError({\n              er: true,\n              msg: error.response.data.message\n            });\n            \n          }\n        }\n        break;\n      case \"delete\":\n        if (uuid) {\n          const GET_REQUEST = `/v1/task/${userId}/${uuid}`;\n          const urlAdres = URL + GET_REQUEST;\n          try {\n            const response = await axios.delete(urlAdres, {//проверку на статус и возвращение? данных(data)\n              uuid: uuid,\n              name: task,\n              done: done\n            });\n            //console.log(response);\n            if (response.status === 204) {\n              return response; \n            } else {\n              //snack bar flag error\n            }\n          } catch (error) {\n            setError({\n              er: true,\n              msg: error.response.data.message\n            });\n          }\n        }\n        break;\n      default:\n        console.log(\"method? error | default\");\n    }\n    return true;\n  }\n\n  const done = async ({it, userInput = \"\", complete = -1, uuid = 0, upTask = \"\" }) => {// передача аргументов по структуре newItem\n\n    //let done = [...todos];\n    let curdone = [...currentTodo];\n\n    switch(it) {\n      case \"addTask\":\n        if(userInput) {\n          await executeRequest({ method: \"post\"}, { task: userInput }, {});\n          const allTask = await executeRequest({method: \"get\"}, {}, { order: \"asc\" });\n          curdone = [...allTask]; \n        }\n        break;\n      case \"removeTask\":\n        if(uuid) {\n          await executeRequest({ method: \"delete\", uuid: uuid }, {}, {});\n          const allTask = await executeRequest({method: \"get\"}, {}, { order: \"asc\" });\n          curdone = [...allTask];\n          if (!((totalRecords - 1) % LIMIT)) {\n            onPageChanged(1, currentPage - 1);\n          }\n        }\n        break;\n      case \"changeChecbox\":\n        if (userInput && uuid && complete !== -1) {\n          await executeRequest({method: \"patch\", uuid: uuid }, { task: userInput, done: !complete }, {});\n          const allTask = await executeRequest({method: \"get\"}, {}, { order: \"asc\" });\n          curdone = [...allTask];\n        }\n        break;\n      case \"showAllTask\":\n        const showAll = await executeRequest({method: \"get\"}, {}, { order: \"asc\" });\n        curdone = [...showAll];\n        break;\n      case \"showComplateTask\":\n        const showComplate = await executeRequest({method: \"get\"}, {}, { filter: \"done\", order: \"asc\" });\n        curdone = [...showComplate];\n        onPageChanged(1, 1);\n        break;\n      case \"showUncomplateTask\":\n        const showUnComplate = await executeRequest({method: \"get\"}, {}, { filter: \"undone\", order: \"asc\"});\n        curdone = [...showUnComplate];\n        onPageChanged(1, 1);\n        break;\n      case \"sortByDate\":\n        const sortByDate = await executeRequest({method: \"get\"}, {}, { order: \"asc\" });\n        //const sortTodo = [...sortByDate];\n        //sortTodo.sort( (a,b) => Date.parse(a.createdAt) - Date.parse(b.createdAt) );\n        curdone = [...sortByDate];\n        break;\n      case \"sortByReversDate\":\n        const sortByReversDate = await executeRequest({method: \"get\"}, {}, { order: \"desc\" });\n        //const sortTodoRevers = [...sortByReversDate];\n        //sortTodoRevers.sort( (a,b) => Date.parse(b.createdAt) - Date.parse(a.createdAt) );\n        curdone = [...sortByReversDate];\n        break;\n      case \"updateTask\":\n        if (uuid && upTask && complete !== -1) {\n          await executeRequest({method: \"patch\", uuid: uuid }, { task: upTask, done: complete }, {});\n          const newTask = await executeRequest({method: \"get\"}, {}, { order: \"asc\" });\n          curdone = [...newTask];\n        }\n        break;\n      default:\n        console.log(\"error done task\");\n    }\n    setCurrentTodo(curdone);\n  };\n  \n  const onPageChanged = useCallback(\n    (event, page, maxPage=-1) => {\n      if (page < 1) page++;\n      if (maxPage !== -1 && page > maxPage) page--;\n      setCurrentPage(page);\n    },\n    [setCurrentPage]\n  );\n\n  const handleCloseToast = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setError(false);\n  };\n\n\n  const currentData = useMemo( () => {\n    const currentData = [...currentTodo]\n    .slice(\n      (currentPage - 1) * LIMIT,\n      (currentPage - 1) * LIMIT + LIMIT\n    );\n    //currentData.sort( (a,b) => Date.parse(a.createdAt) - Date.parse(b.createdAt) );\n\n    return currentData;\n  }, [currentTodo, currentPage]);\n\n  const pages = Math.ceil(totalRecords / LIMIT) || 0;\n \n  useEffect( async () => {\n    // async function deleteAll() {\n    //   const allTask = await executeRequest({method: \"get\"}, {});\n    //   for (let i = 0; i < allTask.length; i++) {\n    //     await executeRequest({method: \"delete\", uuid: allTask[i].uuid }, { });\n    //   }\n    // }\n    //deleteAll();\n    const serverData = await executeRequest({method: \"get\"}, {}, { order: \"asc\" });\n    setCurrentTodo(serverData);\n    //await executeRequest({ method: \"post\"}, { task: \"test 1\" });\n    //await executeRequest({method: \"patch\", uuid: \"0b1f790c-899d-44de-98c3-19c352acb8a8\"}, { task: \"update test 1\", done: true });\n    //await executeRequest({method: \"get\"}, {});\n    //await executeRequest({method: \"delete\", uuid: \"0b1f790c-899d-44de-98c3-19c352acb8a8\"}, { task: \"update test 1\", done: true });//204(нет контента) все равно, но удаляет\n    //await executeRequest({method: \"delete\", uuid: \"0b1f790c-899d-44de-98c3-19c352acb8a8\"}, { });// удалил без параметров тела\n    //await executeRequest({method: \"get\"}, {});\n  }, []);\n\n  return (\n    <Box className=\"App\"> \n      <Grid container spacing={0}>\n        <Grid item xs={12}>\n          <Paper style={styles.App.Header} elevation={0}>ToDo: {currentTodo.length}</Paper>\n          <Paper style={styles.App.Paper}>\n            <ToDoForm done={done}/>\n          </Paper>\n          <MenuToDo\n            done = {done}\n          />\n          {currentData.map((todo) =>        \n            <ToDo\n              key={Date.parse(todo.createdAt)}\n              todo={todo}           \n              done={done}\n              />   \n            )}\n          <Box className={classes.root}>        \n            {pages > 1 && <Pagination \n              count={pages}\n              onChange={onPageChanged}\n              defaultPage={1}\n              color=\"primary\"\n              classes={{ ul: classes.paginator }} \n            />}     \n          </Box>\n        </Grid>\n          <Snackbar open={error.er} autoHideDuration={7000} onClose={handleCloseToast}>\n            <Alert onClose={handleCloseToast} severity=\"error\">\n              {error.msg}\n            </Alert>\n        </Snackbar>\n      </Grid>\n    </Box>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}